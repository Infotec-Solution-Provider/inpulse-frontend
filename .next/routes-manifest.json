{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/[instance]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[instance]/contacts",
      "regex": "^/([^/]+?)/contacts(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/contacts(?:/)?$"
    },
    {
      "page": "/[instance]/customers",
      "regex": "^/([^/]+?)/customers(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/customers(?:/)?$"
    },
    {
      "page": "/[instance]/internal-groups",
      "regex": "^/([^/]+?)/internal\\-groups(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/internal\\-groups(?:/)?$"
    },
    {
      "page": "/[instance]/login",
      "regex": "^/([^/]+?)/login(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/login(?:/)?$"
    },
    {
      "page": "/[instance]/monitor",
      "regex": "^/([^/]+?)/monitor(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/monitor(?:/)?$"
    },
    {
      "page": "/[instance]/monitor/chats",
      "regex": "^/([^/]+?)/monitor/chats(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/monitor/chats(?:/)?$"
    },
    {
      "page": "/[instance]/monitor/internal-chats",
      "regex": "^/([^/]+?)/monitor/internal\\-chats(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/monitor/internal\\-chats(?:/)?$"
    },
    {
      "page": "/[instance]/monitor/users",
      "regex": "^/([^/]+?)/monitor/users(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/monitor/users(?:/)?$"
    },
    {
      "page": "/[instance]/ready-messages",
      "regex": "^/([^/]+?)/ready\\-messages(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/ready\\-messages(?:/)?$"
    },
    {
      "page": "/[instance]/reports/chats",
      "regex": "^/([^/]+?)/reports/chats(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/reports/chats(?:/)?$"
    },
    {
      "page": "/[instance]/reports/report-generator",
      "regex": "^/([^/]+?)/reports/report\\-generator(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/reports/report\\-generator(?:/)?$"
    },
    {
      "page": "/[instance]/users",
      "regex": "^/([^/]+?)/users(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/users(?:/)?$"
    },
    {
      "page": "/[instance]/wallets",
      "regex": "^/([^/]+?)/wallets(?:/)?$",
      "routeKeys": {
        "nxtPinstance": "nxtPinstance"
      },
      "namedRegex": "^/(?<nxtPinstance>[^/]+?)/wallets(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}